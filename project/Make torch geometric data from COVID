{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/convolutional-vae-for-sars-cov-2-1e40f3ed-33af-4d12-8355-de29cb189dba.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240422/auto/storage/goog4_request&X-Goog-Date=20240422T171339Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=041b6a709c2939486537f32d718c896337eb7cf2297aed2ce0df4fc668a376ad3819298ae4a094042c635d46648a245b8069328309db17cb0492fab059d5acd21f0a7cbb2e4bc431a9bda6b18a9abfb511de7bec0a6544be7ccc854b3807661256a6fbee2e0e6608715b97e52c79629e032e1d4089220ec135b819ec1bb48116dfb1f81451fad4640b2cf30f7623a8f38ac518fa11040fb48ea348973a7238ff395768718ef0acf2b42ac172c213df709b591d91b480b754c6a163942003c62b09c788aca69886242fc942de5c9ef40a0f38fb8fa1f7ac8f6d6dd5f0200d961dffbf9471aff3a33a2364e32a5ff37780fdfaca4e4c305580313e91fdfbfd88d4","timestamp":1713806195521}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MK7w-HGdskWA","executionInfo":{"status":"ok","timestamp":1714319701384,"user_tz":240,"elapsed":25007,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"8cdee812-803c-4f56-d441-0111f1a8ff39"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["pip install torch_geometric Bio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MFONBW2Xp_db","executionInfo":{"status":"ok","timestamp":1714319714730,"user_tz":240,"elapsed":13352,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"72643f6f-9bdc-480c-9dea-6459a5544caa"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting torch_geometric\n","  Downloading torch_geometric-2.5.3-py3-none-any.whl (1.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting Bio\n","  Downloading bio-1.7.0-py3-none-any.whl (279 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m279.2/279.2 kB\u001b[0m \u001b[31m16.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (4.66.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.25.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.11.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (2023.6.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.1.3)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.9.5)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (2.31.0)\n","Requirement already satisfied: pyparsing in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (3.1.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (1.2.2)\n","Requirement already satisfied: psutil>=5.8.0 in /usr/local/lib/python3.10/dist-packages (from torch_geometric) (5.9.5)\n","Collecting biopython>=1.80 (from Bio)\n","  Downloading biopython-1.83-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.1/3.1 MB\u001b[0m \u001b[31m33.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting gprofiler-official (from Bio)\n","  Downloading gprofiler_official-1.0.0-py3-none-any.whl (9.3 kB)\n","Collecting mygene (from Bio)\n","  Downloading mygene-3.2.2-py2.py3-none-any.whl (5.4 kB)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from Bio) (2.0.3)\n","Requirement already satisfied: pooch in /usr/local/lib/python3.10/dist-packages (from Bio) (1.8.1)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (1.9.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->torch_geometric) (4.0.3)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch_geometric) (2.1.5)\n","Collecting biothings-client>=0.2.6 (from mygene->Bio)\n","  Downloading biothings_client-0.3.1-py2.py3-none-any.whl (29 kB)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->Bio) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->Bio) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->Bio) (2024.1)\n","Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.10/dist-packages (from pooch->Bio) (4.2.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from pooch->Bio) (24.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->torch_geometric) (2024.2.2)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->torch_geometric) (1.4.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->torch_geometric) (3.4.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->Bio) (1.16.0)\n","Installing collected packages: biopython, gprofiler-official, biothings-client, torch_geometric, mygene, Bio\n","Successfully installed Bio-1.7.0 biopython-1.83 biothings-client-0.3.1 gprofiler-official-1.0.0 mygene-3.2.2 torch_geometric-2.5.3\n"]}]},{"cell_type":"code","source":["import re\n","import os\n","import numpy as np\n","import pandas as pd\n","import torch\n","import matplotlib.pyplot as plt\n","\n","import torch\n","from torch_geometric.data import Data\n","from torch_geometric.nn import GCNConv\n","import torch.nn.functional as F\n","import torch.optim as optim\n","\n","from Bio import SeqIO\n","from io import StringIO\n","from itertools import product\n","from tqdm import trange, tqdm"],"metadata":{"id":"TzpWNvX2sa-k","executionInfo":{"status":"ok","timestamp":1714319731555,"user_tz":240,"elapsed":16831,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["from Bio.Seq import Seq\n","from Bio.SeqRecord import SeqRecord\n","\n","# Define sequence and identifier\n","sequence = \"ATCGATCG\"\n","identifier = \"Sequence1\"\n","\n","# Create a Seq object from the sequence\n","seq_object = Seq(sequence)\n","\n","# Create a SeqRecord object\n","seq_record = SeqRecord(seq_object, id=identifier)\n","\n","print(seq_record)\n"],"metadata":{"id":"JCZ2Q-ZewGgJ","executionInfo":{"status":"ok","timestamp":1714319731555,"user_tz":240,"elapsed":11,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"15a06918-7880-4371-e21a-674fa47f3612"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["ID: Sequence1\n","Name: <unknown name>\n","Description: <unknown description>\n","Number of features: 0\n","Seq('ATCGATCG')\n"]}]},{"cell_type":"code","source":["def get_kmer_dictionary(kmer_size):\n","    alphabet = ['A', 'C', 'G', 'T', 'N']\n","    kmers = [''.join(mer) for mer in product(alphabet, repeat=kmer_size)]\n","    kmer_dict = {kmer: i for i, kmer in enumerate(kmers)}\n","    return kmer_dict"],"metadata":{"id":"fJ9WYmpV07Rd","executionInfo":{"status":"ok","timestamp":1714319731555,"user_tz":240,"elapsed":8,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def get_edge_index_for_sequence(seq_record, kmer_size):\n","  local_dict = get_kmer_dictionary(kmer_size)\n","  print(local_dict)\n","  sources = []\n","  targets = []\n","  for i in range(0, (len(str(seq_record.seq)) - kmer_size - 1)):\n","    current_block = seq_record.seq[i:i+kmer_size]\n","    target_block = seq_record.seq[i+1:i+kmer_size+1]\n","    current_node = local_dict[current_block]\n","    target_block = local_dict[target_block]\n","\n","    sources.append(current_node)\n","    targets.append(target_block)\n","\n","  return torch.tensor([sources, targets])\n","\n","\n","# edges = get_edge_index_for_sequence(seq_record, 2)\n","# print(edges)"],"metadata":{"id":"zCoooAW-wGQA","executionInfo":{"status":"ok","timestamp":1714320107041,"user_tz":240,"elapsed":189,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["%cd drive/MyDrive/10708/10708\\ Project"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kj3krUU3E0ah","executionInfo":{"status":"ok","timestamp":1714320114748,"user_tz":240,"elapsed":191,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"58d071fb-dbae-4df7-f090-b11db304cdb1"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/10708/10708 Project\n"]}]},{"cell_type":"code","source":["\n","fasta_file = \"sequences.fasta\"\n","\n","sequences = []\n","records = list(SeqIO.parse(\"sequences.fasta\", \"fasta\"))\n","\n","# for record in sequences[:5]:\n","#     print(\"ID:\", record.id)\n","#     print(\"Description:\", record.description)\n","#     print(\"Sequence:\", record.seq)\n","#     print()\n"],"metadata":{"id":"Jftp277sEwTe","executionInfo":{"status":"ok","timestamp":1714320164120,"user_tz":240,"elapsed":1093,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["records"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okWokoY9FFKY","executionInfo":{"status":"ok","timestamp":1714239093605,"user_tz":240,"elapsed":24,"user":{"displayName":"Bhargav Hadya","userId":"15202506602422047677"}},"outputId":"5a7db9e0-8ebd-45f0-a649-d3cf839a110b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[SeqRecord(seq=Seq('ATTAAAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGT...AAA'), id='NC_045512.2', name='NC_045512.2', description='NC_045512.2 |Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1, complete genome', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...TGC'), id='OL314666.1', name='OL314666.1', description='OL314666.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_329003975/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...TGC'), id='OL314667.1', name='OL314667.1', description='OL314667.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_329360741/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), and ORF7a protein (ORF7a) genes, complete cds; ORF7b and ORF8 genes, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...TGC'), id='OL314668.1', name='OL314668.1', description='OL314668.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330378945/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...TGC'), id='OL314669.1', name='OL314669.1', description='OL314669.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330381292/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...GCT'), id='OL314670.1', name='OL314670.1', description='OL314670.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330582862/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...GAA'), id='OL314671.1', name='OL314671.1', description='OL314671.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330728562/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...GCT'), id='OL314672.1', name='OL314672.1', description='OL314672.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330728623/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), and ORF6 protein (ORF6) genes, complete cds; ORF7a protein (ORF7a) and ORF7b (ORF7b) genes, partial cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...NAA'), id='OL314673.1', name='OL314673.1', description='OL314673.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330732113/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[]),\n"," SeqRecord(seq=Seq('ACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATC...GCT'), id='OL314674.1', name='OL314674.1', description='OL314674.1 |Severe acute respiratory syndrome coronavirus 2 isolate SARS-CoV-2/human/USA/SRL_330748571/2021 ORF1ab polyprotein (ORF1ab), ORF1a polyprotein (ORF1ab), surface glycoprotein (S), ORF3a protein (ORF3a), envelope protein (E), membrane glycoprotein (M), ORF6 protein (ORF6), ORF7a protein (ORF7a), and ORF7b (ORF7b) genes, complete cds; ORF8 gene, complete sequence; and nucleocapsid phosphoprotein (N) and ORF10 protein (ORF10) genes, complete cds', dbxrefs=[])]"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["print(get_edge_index_for_sequence(records[0], 1).shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y9jrj5qvID6W","executionInfo":{"status":"ok","timestamp":1714320177945,"user_tz":240,"elapsed":170,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"3bb7fb5e-7023-496c-9216-bb8fb8000c02"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["{'A': 0, 'C': 1, 'G': 2, 'T': 3, 'N': 4}\n","torch.Size([2, 29901])\n"]}]},{"cell_type":"code","source":["#FRAGMENTED SEQUENCES NOT FULL\n","from Bio import SeqIO\n","from tqdm import tqdm\n","fasta_file = \"sequences.fasta\"\n","\n","sequences = []\n","records = list(SeqIO.parse(\"sequences.fasta\", \"fasta\"))\n","\n","\n","def get_edge_index_for_sequence(seq, kmer_size):\n","    local_dict = get_kmer_dictionary(kmer_size)\n","    # print(local_dict)\n","    sources = []\n","    targets = []\n","    for i in range(0, (len(seq) - kmer_size - 1)):\n","      current_block = seq[i:i+kmer_size]\n","      target_block = seq[i+1:i+kmer_size+1]\n","      current_node = local_dict[current_block]\n","      target_block = local_dict[target_block]\n","\n","      sources.append(current_node)\n","      targets.append(target_block)\n","\n","    return torch.tensor([sources, targets])\n","def get_subsequences(sequence, subseq_length):\n","    \"\"\"Generate subsequences of the given length from a sequence.\"\"\"\n","    results = []\n","    for i in range(len(sequence) - subseq_length + 1):\n","        if i + subseq_length > len(sequence):\n","          break\n","        results.append(sequence[i:i + subseq_length])\n","    return results\n","\n","train_data = []\n","subseq_length = 100 # Length of each subsequence\n","kmer_size = 3      # Size of k-mer\n","\n","for record in records:\n","    # Retrieve the sequence from the record\n","    sequence = str(record.seq)\n","    # For each subsequence of length 50:\n","    subseqs = get_subsequences(sequence, subseq_length)\n","    for i in tqdm(range(len(subseqs))):\n","        subseq = subseqs[i]\n","        edge_index = get_edge_index_for_sequence(subseq, kmer_size)\n","        train_data.append(edge_index)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MGIBL3mXg50E","executionInfo":{"status":"ok","timestamp":1714322771523,"user_tz":240,"elapsed":58312,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"3ce092f4-ac94-493b-eb53-78e9c794342b"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 29804/29804 [00:06<00:00, 4944.90it/s]\n","100%|██████████| 29689/29689 [00:06<00:00, 4292.17it/s]\n","100%|██████████| 29689/29689 [00:07<00:00, 4034.66it/s]\n","100%|██████████| 29689/29689 [00:05<00:00, 5852.25it/s]\n","100%|██████████| 29689/29689 [00:04<00:00, 6184.63it/s]\n","100%|██████████| 29690/29690 [00:06<00:00, 4539.55it/s]\n","100%|██████████| 29724/29724 [00:04<00:00, 6090.45it/s]\n","100%|██████████| 29690/29690 [00:05<00:00, 5013.42it/s]\n","100%|██████████| 29724/29724 [00:05<00:00, 5349.53it/s]\n","100%|██████████| 29690/29690 [00:04<00:00, 6177.14it/s]\n"]}]},{"cell_type":"code","source":["#non fragmented\n","train_data = []\n","for record in records:\n","    train_data.append(get_edge_index_for_sequence(sequence, 2))\n","\n"],"metadata":{"id":"XRfapWyhOdkC","executionInfo":{"status":"ok","timestamp":1714322705394,"user_tz":240,"elapsed":583,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["print(len(train_data), train_data[0].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vG26pnn4czq1","executionInfo":{"status":"ok","timestamp":1714322786401,"user_tz":240,"elapsed":612,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"1044f8ed-e626-4abd-bd4d-d24a720ce780"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["297078 torch.Size([2, 96])\n"]}]},{"cell_type":"code","source":["trunc_size = min(dat.shape[1] for dat in train_data)\n","\n","# for dat in train_data:\n","#   print(dat.shape[1])"],"metadata":{"id":"zd8C3mNKQiDU","executionInfo":{"status":"ok","timestamp":1714322801056,"user_tz":240,"elapsed":258,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["trunc_size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"soVEDNzGg3aA","executionInfo":{"status":"ok","timestamp":1714322803657,"user_tz":240,"elapsed":139,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"c9707f68-5a5d-40cc-8c9a-09fd42deb3c8"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["96"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["# Truncate all the sequences to trunc_size - 5\n","\n","for i in range(len(train_data)):\n","  train_data[i] = train_data[i][:,:trunc_size-5]\n","\n","\n","for dat in train_data:\n","  print(dat.shape)"],"metadata":{"id":"VQHhh4prS_go","executionInfo":{"status":"error","timestamp":1714322810560,"user_tz":240,"elapsed":5568,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"48a6b654-aa33-465e-a6a7-b473d5930a99"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n","torch.Size([2, 91])\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-62-209ca4712f5c>\u001b[0m in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mdat\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtrain_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mwrite\u001b[0;34m(self, string)\u001b[0m\n\u001b[1;32m    400\u001b[0m             \u001b[0mis_child\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_master_process\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    401\u001b[0m             \u001b[0;31m# only touch the buffer in the IO thread to avoid races\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 402\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpub_thread\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mschedule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_buffer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstring\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    403\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_child\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    404\u001b[0m                 \u001b[0;31m# mp.Pool cannot be trusted to flush promptly (or ever),\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mschedule\u001b[0;34m(self, f)\u001b[0m\n\u001b[1;32m    201\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_events\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m             \u001b[0;31m# wake event thread (message content is ignored)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_event_pipe\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mb''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    204\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    205\u001b[0m             \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, data, flags, copy, track, routing_id, group)\u001b[0m\n\u001b[1;32m    616\u001b[0m                 )\n\u001b[1;32m    617\u001b[0m             \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgroup\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 618\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    619\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    620\u001b[0m     def send_multipart(\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.send\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._send_copy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["train_data = torch.stack(train_data)"],"metadata":{"id":"fRhadD4jii5A","executionInfo":{"status":"ok","timestamp":1714321349935,"user_tz":240,"elapsed":1003,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["train_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23g40TwMiprr","executionInfo":{"status":"ok","timestamp":1714322434203,"user_tz":240,"elapsed":135,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"ade23b9e-c5ef-422b-dd42-97eabb83175e"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]]),\n"," tensor([[ 1,  6,  5,  ..., 18, 15,  2],\n","         [ 6,  5,  0,  ..., 15,  2, 13]])]"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["class GCN(torch.nn.Module):\n","    def __init__(self, in_channels, out_channels, num_edges, num_nodes):\n","        super(GCN, self).__init__()\n","\n","        self.num_nodes = num_nodes\n","\n","        # Initialize GCNConv layers\n","        self.conv1 = GCNConv(in_channels, 1)\n","\n","        self.conv_mu = GCNConv(1, out_channels)\n","        self.conv_logvar = GCNConv(1, out_channels)\n","\n","        # Decoder for adjacency matrix\n","        self.decoder_linear = torch.nn.Linear(num_nodes, 16)\n","        self.decoder_ReLU = torch.nn.ReLU()\n","        self.decoder_linear2 =  torch.nn.Linear(16, num_edges)\n","\n","    def reparameterize(self, mu, logvar):\n","        std = torch.exp(logvar / 2)\n","        eps = torch.randn_like(std)\n","        return mu + eps * std\n","\n","    def forward(self, x, edge_index):\n","        print(\"a\", x.shape, edge_index.shape)\n","        x = F.relu(self.conv1(x, edge_index))\n","        print(\"b\", x.shape)\n","        mu = self.conv_mu(x, edge_index)\n","        print(\"c\")\n","        logvar = self.conv_logvar(x, edge_index)\n","        print(\"d\")\n","        z = self.reparameterize(mu, logvar).T\n","\n","        print(\"e\")\n","        # print(\"z shape after reparameterizing\", z.shape)\n","        decoder1 = self.decoder_linear(z)\n","        print(\"f\")\n","        # print(\"z shape after linear\", z.shape)\n","        print(\"g\")\n","        decoder2 = self.decoder_ReLU(decoder1)\n","        # print(\"z shape are relu\", z.shape)\n","        print(\"h\")\n","        decoder_edge_index = self.decoder_linear2(decoder2)\n","        # print(\"decoder_edge_index shape\", decoder_edge_index.shape)\n","        return decoder_edge_index, mu, logvar, z\n","\n","def loss_function(mse_loss_fn, recon_edge_index, true_edge_index, mu, logvar):\n","   # Initialize here\n","    BCE_adj = mse_loss_fn(recon_edge_index, true_edge_index)  # Correctly apply the loss function\n","    KLD = -0.5 * torch.sum(1 + logvar - mu.pow(2) - logvar.exp())\n","    return BCE_adj + KLD\n","\n"],"metadata":{"id":"ZqEh3GU9NjkG","executionInfo":{"status":"ok","timestamp":1714323125701,"user_tz":240,"elapsed":138,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["print(num_nodes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vt0kPfGCjRpg","executionInfo":{"status":"ok","timestamp":1714321961491,"user_tz":240,"elapsed":3,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"0a9301f3-1885-4c53-ddda-b85cb1a7d0d2"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["25\n"]}]},{"cell_type":"code","source":["#global data\n","num_nodes = len(get_kmer_dictionary(2))\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","#in_channels, out_channels, num_edges, num_node\n","model = GCN(1, 2, 20, 20)\n","mse_loss_fn = torch.nn.MSELoss()\n","optimizer = optim.Adam(model.parameters(), lr=0.01)\n","\n","print(num_nodes)\n","# #initialize training data\n","# edges = torch.tensor([[0,1,2,3,4],[1,2,3,4,0]], dtype=torch.long)\n","# x = torch.randn(num_nodes, 1)\n","# adj = torch.eye(num_nodes)\n","# graph_data = Data(x=x, edge_index=edges)\n","\n","# edges = torch.tensor([[0,1,2,3,4],[4,1,2,0,3]], dtype=torch.long)\n","# x = torch.randn(num_nodes, 1)\n","# adj = torch.eye(num_nodes)\n","# graph_data2 = Data(x=x, edge_index=edges)\n","\n","# print(graph_data.edge_index)\n","# print(graph_data2.edge_index)\n"],"metadata":{"id":"IwnjyFgATdqy","executionInfo":{"status":"ok","timestamp":1714323219159,"user_tz":240,"elapsed":125,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"73f17d38-5e92-4c27-e993-7f6ef5504492"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["25\n"]}]},{"cell_type":"code","source":["print(model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QeuDBNnen1S8","executionInfo":{"status":"ok","timestamp":1714323154128,"user_tz":240,"elapsed":5,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"f9fc2c13-214a-4b8b-a462-9a4bb357610e"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["GCN(\n","  (conv1): GCNConv(1, 1)\n","  (conv_mu): GCNConv(1, 2)\n","  (conv_logvar): GCNConv(1, 2)\n","  (decoder_linear): Linear(in_features=25, out_features=16, bias=True)\n","  (decoder_ReLU): ReLU()\n","  (decoder_linear2): Linear(in_features=16, out_features=91, bias=True)\n",")\n"]}]},{"cell_type":"code","source":["# Training loop\n","losses = []\n","for epoch in range(200):\n","  curr_loss = 0\n","  for i in range(len(train_data)):\n","    edges = train_data[i]\n","    x = torch.randn(25, 1)\n","    graph_data = Data(x=x, edge_index=edges)\n","    print(graph_data)\n","    model.train()\n","    optimizer.zero_grad()\n","\n","    recon_edges, mu, logvar, z = model(graph_data.x, graph_data.edge_index)\n","    # print(\"edges shape\", edges.shape, \"recon_edges shape\", recon_edges.shape)\n","    loss = loss_function(mse_loss_fn, recon_edges, edges.float(), mu, logvar)\n","    curr_loss += loss.item()\n","    loss.backward()\n","    optimizer.step()\n","  losses.append(curr_loss/len(train_data))\n","  print(f\"Epoch {epoch+1}, Loss: {loss.item()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"ey3_YSRTYbcQ","executionInfo":{"status":"error","timestamp":1714323222820,"user_tz":240,"elapsed":1078,"user":{"displayName":"Sophie Liu","userId":"11072000168371721717"}},"outputId":"63abfefa-45a1-4406-86d1-40952dd86126"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["Data(x=[25, 1], edge_index=[2, 91])\n","a torch.Size([25, 1]) torch.Size([2, 91])\n"]},{"output_type":"error","ename":"RuntimeError","evalue":"index 90 is out of bounds for dimension 0 with size 25","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-77-7958fce0cc6c>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0moptimizer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzero_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0mrecon_edges\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogvar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgraph_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgraph_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0medge_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0;31m# print(\"edges shape\", edges.shape, \"recon_edges shape\", recon_edges.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mloss_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmse_loss_fn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecon_edges\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medges\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogvar\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-70-b27e29206cfa>\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, x, edge_index)\u001b[0m\n\u001b[1;32m     23\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"a\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m         \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mF\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrelu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconv1\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"b\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m         \u001b[0mmu\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconv_mu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch_geometric/nn/conv/gcn_conv.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, x, edge_index, edge_weight)\u001b[0m\n\u001b[1;32m    239\u001b[0m                 \u001b[0mcache\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cached_edge_index\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mcache\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 241\u001b[0;31m                     edge_index, edge_weight = gcn_norm(  # yapf: disable\n\u001b[0m\u001b[1;32m    242\u001b[0m                         \u001b[0medge_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_weight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnode_dim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m                         self.improved, self.add_self_loops, self.flow, x.dtype)\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch_geometric/nn/conv/gcn_conv.py\u001b[0m in \u001b[0;36mgcn_norm\u001b[0;34m(edge_index, edge_weight, num_nodes, improved, add_self_loops, flow, dtype)\u001b[0m\n\u001b[1;32m    106\u001b[0m     \u001b[0mrow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medge_index\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mflow\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'source_to_target'\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 108\u001b[0;31m     \u001b[0mdeg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0medge_weight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdim_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_nodes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreduce\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'sum'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    109\u001b[0m     \u001b[0mdeg_inv_sqrt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdeg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpow_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0mdeg_inv_sqrt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmasked_fill_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdeg_inv_sqrt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'inf'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch_geometric/utils/_scatter.py\u001b[0m in \u001b[0;36mscatter\u001b[0;34m(src, index, dim, dim_size, reduce)\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mreduce\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'sum'\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mreduce\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'add'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbroadcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 75\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0msrc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnew_zeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter_add_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdim\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msrc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     76\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mreduce\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'mean'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRuntimeError\u001b[0m: index 90 is out of bounds for dimension 0 with size 25"]}]},{"cell_type":"code","source":["saved_losses = losses"],"metadata":{"id":"fEIn7FaPeH0G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n"],"metadata":{"id":"OVT074dofHIM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(np.arange(1,len(losses)+ 1), saved_losses)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"JXDLVfe1fa63","executionInfo":{"status":"ok","timestamp":1714239157650,"user_tz":240,"elapsed":484,"user":{"displayName":"Bhargav Hadya","userId":"15202506602422047677"}},"outputId":"5db072dd-ba33-41de-e189-5c411d7da9b5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["torch.save(model.state_dict(), \"VAE.pt\")"],"metadata":{"id":"6X2HaTIjndwy"},"execution_count":null,"outputs":[]}]}